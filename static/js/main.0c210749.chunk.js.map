{"version":3,"sources":["HomePage/HomePage.js","images/bunny.gif","images/hot.gif","search/search.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","className","Search","useState","city","setCity","temp","setTemp","tempF","setTempF","wind","setWind","date","setDate","humidity","setHumidity","onSubmit","e","preventDefault","axios","get","params","key","q","then","res","data","current","temp_c","temp_f","wind_kph","last_updated","console","log","type","placeholder","name","value","onChange","target","src","bunny","alt","moment","format","hot","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAWeA,MATf,WACI,OACI,qBAAKC,UAAU,QAAf,SACI,iE,gDCLG,MAA0B,kCCA1B,MAA0B,gCCgG1BC,MAzFf,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBN,qBAAxB,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAwBR,qBAAxB,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAgCV,qBAAhC,mBAAOW,EAAP,KAAiBC,EAAjB,KAuBA,OACE,sBAAKd,UAAU,SAAf,UACE,iCACE,qBAAKA,UAAU,iBAAf,SACE,uBAAMe,SAzBK,SAACC,GAClBA,EAAEC,iBACEd,GACFe,IACGC,IAAI,4CAA6C,CAChDC,OAAQ,CACNC,IAAK,kCACLC,EAAGnB,KAGNoB,MAAK,SAACC,GACLlB,EAAQkB,EAAIC,KAAKC,QAAQC,QACzBnB,EAASgB,EAAIC,KAAKC,QAAQE,QAC1BlB,EAAQc,EAAIC,KAAKC,QAAQG,UACzBjB,EAAQY,EAAIC,KAAKC,QAAQI,cACzBhB,EAAYU,EAAIC,KAAKC,QAAQb,UAC7BkB,QAAQC,IAAIR,EAAIC,UAShB,UACE,uBACEQ,KAAK,OACLC,YAAY,4BACZC,KAAK,SACLC,MAAOjC,EACPkC,SAAU,SAACrB,GAAD,OAAOZ,EAAQY,EAAEsB,OAAOF,UAEpC,wBAAQH,KAAK,SAASjC,UAAU,aAAhC,2BAON,qBAAKA,UAAU,eAAf,SACE,8BAEQK,EAAO,GAEP,sBAAKL,UAAU,OAAf,UACE,qBAAKuC,IAAKC,EAAOC,IAAI,gBACrB,uBAFF,gBAGgBpC,EAHhB,SAGyBE,EAHzB,QAIE,uBAJF,eAKeE,EALf,SAME,uBANF,aAOaI,EACX,uBARF,gBASgB,IACb6B,IAAO/B,GAAMgC,OAAO,kCAGhBtC,EAAO,GAEd,sBAAKL,UAAU,OAAf,UACE,qBAAKuC,IAAKK,EAAKH,IAAI,gBACnB,uBAFF,gBAGgBpC,EAHhB,SAGyBE,EAHzB,QAIE,uBAJF,eAKeE,EALf,SAME,uBANF,gBAOgB,IACbiC,IAAO/B,GAAMgC,OAAO,kCAIlB,aCzENE,MAVf,WACE,OACE,sBAAK7C,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCIO8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c210749.chunk.js","sourcesContent":["import './home.css';\n\nfunction HomePage(){\n    return(\n        <div className=\"title\">\n            <h1>Welcome For Weather Update !</h1>    \n            \n        </div>\n    )\n}\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/bunny.c03138ea.gif\";","export default __webpack_public_path__ + \"static/media/hot.2a540278.gif\";","import \"./search.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport bunny from \"../images/bunny.gif\";\nimport hot from \"../images/hot.gif\";\n\nfunction Search() {\n  const [city, setCity] = useState();\n  const [temp, setTemp] = useState();\n  const [tempF, setTempF] = useState();\n  const [wind, setWind] = useState();\n  const [date, setDate] = useState();\n  const [humidity, setHumidity] = useState();\n\n  const getWeather = (e) => {\n    e.preventDefault();\n    if (city) {\n      axios\n        .get(\"http://api.weatherapi.com/v1/current.json\", {\n          params: {\n            key: \"509236b530fb4065bef184627212112\",\n            q: city,\n          },\n        })\n        .then((res) => {\n          setTemp(res.data.current.temp_c);\n          setTempF(res.data.current.temp_f);\n          setWind(res.data.current.wind_kph);\n          setDate(res.data.current.last_updated);\n          setHumidity(res.data.current.humidity);\n          console.log(res.data);\n        });\n    }\n  };\n\n  return (\n    <div className=\"banner\">\n      <center>\n        <div className=\"banner-content\">\n          <form onSubmit={getWeather}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter City To Get Details\"\n              name=\"search\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            />\n            <button type=\"submit\" className=\"btn-search\">\n              search\n            </button>\n          </form>\n        </div>\n      </center>\n\n      <div className=\"weather-data\">\n        <div>\n          {(() => {\n            if (temp < 20) {\n              return (\n                <div className=\"temp\">\n                  <img src={bunny} alt=\"weather-img\" />\n                  <br />\n                  Temperature: {temp}째C/{tempF}째F\n                  <br />\n                  Wind Speed: {wind} km/hr\n                  <br />\n                  Humidity: {humidity}\n                  <br />\n                  Last Updated:{\" \"}\n                  {moment(date).format(\"MMMM Do YYYY, h:mm a (dddd)\")}\n                </div>\n              );\n            } else if (temp > 20) {\n              return (\n                <div className=\"temp\">\n                  <img src={hot} alt=\"weather-img\" />\n                  <br />\n                  Temperature: {temp}째C/{tempF}째F\n                  <br />\n                  Wind Speed: {wind} km/hr\n                  <br />\n                  Last Updated:{\" \"}\n                  {moment(date).format(\"MMMM Do YYYY, h:mm a (dddd)\")}\n                </div>\n              );\n            }else {\n              return null;\n            }\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import './App.css';\nimport HomePage from './HomePage/HomePage';\nimport Search from './search/search';\n\nfunction App() {\n  return (\n    <div className=\"main\">\n        <HomePage />\n        <Search />\n    </div>   \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}